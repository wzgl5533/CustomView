apply plugin: 'com.android.library'
apply plugin: 'com.github.dcendents.android-maven'

android {
    compileSdkVersion 25
    buildToolsVersion '26.0.2'

    defaultConfig {
        minSdkVersion 15
        targetSdkVersion 25
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

dependencies {
    compile fileTree(include: ['*.jar'], dir: 'libs')
    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    //noinspection GradleCompatible
    compile 'com.android.support:appcompat-v7:25.3.1'
    testCompile 'junit:junit:4.12'
    compile 'com.nineoldandroids:library:2.4.0'
    //ProgressLoading
    compile 'com.github.ybq:Android-SpinKit:1.1.0'
    compile 'com.wang.avi:library:2.1.3'
    //RatingBar
    compile 'me.zhanghai.android.materialratingbar:library:1.0.2'
    compile 'com.iarcuschin:simpleratingbar:0.1.5'
    //SeekBar
    compile 'com.xw.repo:bubbleseekbar:3.4-lite'
    //带缩放的ImageView
    compile 'com.github.chrisbanes:PhotoView:+'
    //底部导航
    compile 'devlight.io:navigationtabbar:1.2.5'
    //扁平化控件
    //    compile 'com.github.rey5137:material:1.2.4'
    //SVG
    compile 'com.caverock:androidsvg:1.2.1'
}

//-----------------以下主要是开放源码及文档----------------------------

//// 指定编码
//tasks.withType(JavaCompile) {
//    options.encoding = "UTF-8"
//}

// 打包源码
task sourcesJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
    classifier = 'sources'
}

//制作文档
//task javadoc(type: Javadoc) {
//    failOnError  false
//    source = android.sourceSets.main.java.sourceFiles
//    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
//    classpath += configurations.compile
//}

//// 制作文档(Javadoc)
//task javadocJar(type: Jar, dependsOn: javadoc) {
//    classifier = 'javadoc'
//    from javadoc.destinationDir
//}

artifacts {
    archives sourcesJar
//    archives javadocJar
}